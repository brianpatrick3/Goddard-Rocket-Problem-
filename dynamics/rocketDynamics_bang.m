function [stateDerivative,T_opt,S,Sdot,Hamiltonian] = rocketDynamics_bang(epoch,in2,thrust,effectiveExhaustVelocity,rho)
%rocketDynamics_bang
%    [stateDerivative,T_opt,S,Sdot,Hamiltonian] = rocketDynamics_bang(EPOCH,IN2,THRUST,effectiveExhaustVelocity,RHO)

%    This function was generated by the Symbolic Math Toolbox version 9.2.
%    07-Dec-2022 21:01:54

height = in2(1,:);
lam1 = in2(4,:);
lam2 = in2(5,:);
lam3 = in2(6,:);
mass = in2(3,:);

% Check if mass is spent 
if mass <= 0.6 
    thrust = 0; 
end

velocity = in2(2,:);
t2 = velocity.^2;
t3 = 1.0./effectiveExhaustVelocity;
t4 = 1.0./height.^2;
t5 = 1.0./mass;
t7 = 1.0./rho;
t8 = height.*5.0e+2;
t6 = t5.^2;
t9 = lam3.*t3;
t10 = lam2.*t5;
t11 = -t8;
t12 = -t4;
t13 = -t10;
t14 = t11+5.0e+2;
t15 = exp(t14);
t16 = t9+t13;
t17 = t2.*t15.*3.1e+2;
t18 = t7.*t16;
t19 = tanh(t18);
t20 = t19./2.0;
t21 = t20-1.0./2.0;
t22 = t21.*thrust;
t23 = t17+t22;
stateDerivative = [velocity;t12-t5.*t23;t3.*t22;-lam2.*(1.0./height.^3.*2.0+t2.*t5.*t15.*1.55e+5)+1.0;-lam1+t10.*t15.*velocity.*6.2e+2;-lam2.*t6.*t23];
if nargout > 1
    T_opt = -t22;
end
if nargout > 2
    S = -t9+t10;
end
if nargout > 3
    Sdot = -lam1.*t5+lam2.*t6.*t17.*(t3+2.0./velocity);
end
if nargout > 4
    Hamiltonian = -height-lam2.*(t4+t5.*(t17-thrust))+lam1.*velocity-t9.*thrust;
end
