function [stateDerivative,thrust,S,Hamiltonian,Tsingular] = rocketDynamics_symbolic(epoch,in2,thrust,effectiveExhaustVelocity,rho)
%rocketDynamics_symbolic
%    [stateDerivative,THRUST,S,Hamiltonian,Tsingular] = rocketDynamics_symbolic(EPOCH,IN2,THRUST,effectiveExhaustVelocity,RHO)

%    This function was generated by the Symbolic Math Toolbox version 9.2.
%    07-Dec-2022 15:04:34

height = in2(1,:);
lam1 = in2(4,:);
lam2 = in2(5,:);
lam3 = in2(6,:);
mass = in2(3,:);

% Check if fuel is spent
if mass <= 0.6 
    thrust = 0; 
end

velocity = in2(2,:);
t2 = velocity.^2;
t3 = velocity.^3;
t4 = 1.0./effectiveExhaustVelocity;
t5 = 1.0./height.^2;
t6 = 1.0./height.^3;
t7 = 1.0./mass;
t10 = 1.0./rho;
t11 = 1.0./velocity;
t12 = height.*5.0e+2;
t8 = t7.^2;
t9 = t7.^3;
t13 = t6.*2.0;
t14 = t11.*2.0;
t15 = lam3.*t4;
t16 = lam2.*t7;
t17 = -t12;
t18 = -t5;
t20 = t4+t11;
t19 = -t16;
t21 = t17+5.0e+2;
t22 = t4+t14;
t23 = exp(t21);
t24 = t15+t19;
t25 = t2.*t23.*3.1e+2;
t26 = t10.*t24;
t28 = t16.*t23.*velocity.*6.2e+2;
t30 = t2.*t7.*t23.*1.55e+5;
t27 = tanh(t26);
t32 = t13+t30;
t29 = t27./2.0;
t34 = lam2.*t32;
t31 = t29-1.0./2.0;
t33 = t31.*thrust;
t35 = t25+t33;
stateDerivative = [velocity;t18-t7.*t35;t4.*t33;-t34+1.0;-lam1+t28;-lam2.*t8.*t35];
if nargout > 1
    thrust = thrust;
end
if nargout > 2
    S = -t15+t16;
end
if nargout > 3
    Hamiltonian = -height-lam2.*(t5+t7.*(t25-thrust))+lam1.*velocity-t15.*thrust;
end
if nargout > 4
    Tsingular = (-t7.*(t34-1.0)+t8.*t22.*t25.*(lam1-t28)+lam2.*t8.*t22.*(t3.*t23.*1.55e+5+t5.*t23.*velocity.*6.2e+2+t3.*t7.*exp(height.*-1.0e+3+1.0e+3).*1.922e+5)+lam2.*t8.*t20.*t23.*velocity.*(t5+t7.*t25).*6.2e+2)./(-t4.*(lam1.*t8-lam2.*t2.*t9.*t22.*t23.*6.2e+2)+lam2.*t9.*t20.*t23.*velocity.*6.2e+2+lam2.*t9.*t22.*t23.*velocity.*6.2e+2);
end
